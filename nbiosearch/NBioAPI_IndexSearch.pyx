# This code was automatically generated by CWrap version 0.0.0
from shared_types cimport *
from NBioAPI cimport *

cdef extern from "eNBSP/include/NBioAPI_IndexSearch.h":

    NBioAPI_RETURN NBioAPI_InitIndexSearchEngine(NBioAPI_HANDLE hHandle)

    NBioAPI_RETURN NBioAPI_TerminateIndexSearchEngine(NBioAPI_HANDLE hHandle)

    NBioAPI_RETURN NBioAPI_SetIndexSearchInitInfo(NBioAPI_HANDLE hHandle, NBioAPI_UINT8 nStructureType, NBioAPI_INIT_INFO_PTR pInitInfo)

    NBioAPI_RETURN NBioAPI_GetIndexSearchInitInfo(NBioAPI_HANDLE hHandle, NBioAPI_UINT8 nStructureType, NBioAPI_INIT_INFO_PTR pInitInfo)

    NBioAPI_RETURN NBioAPI_AddFIRToIndexSearchDB(NBioAPI_HANDLE hHandle, const NBioAPI_INPUT_FIR_PTR pInputFIR, NBioAPI_UINT32 nUserID, NBioAPI_INDEXSEARCH_SAMPLE_INFO_PTR pSampleInfo)

    NBioAPI_RETURN NBioAPI_RemoveDataFromIndexSearchDB(NBioAPI_HANDLE hHandle, NBioAPI_INDEXSEARCH_FP_INFO_PTR pFpInfo)

    NBioAPI_RETURN NBioAPI_RemoveUserFromIndexSearchDB(NBioAPI_HANDLE hHandle, NBioAPI_UINT32 nUserID)

    NBioAPI_RETURN NBioAPI_IdentifyDataFromIndexSearchDB(NBioAPI_HANDLE hHandle, const NBioAPI_INPUT_FIR_PTR pInputFIR, NBioAPI_FIR_SECURITY_LEVEL nSecuLevel, NBioAPI_INDEXSEARCH_FP_INFO_PTR pFpInfo, NBioAPI_INDEXSEARCH_CALLBACK_INFO_PTR_0 pCallbackInfo0)

    NBioAPI_RETURN NBioAPI_IdentifyDataFromIndexSearchDBEx(NBioAPI_HANDLE hHandle, const NBioAPI_INPUT_FIR_PTR pInputFIR, NBioAPI_FIR_SECURITY_LEVEL nSecuLevel, NBioAPI_INDEXSEARCH_FP_INFO_PTR pFpInfo, NBioAPI_INDEXSEARCH_CALLBACK_INFO_PTR_0 pCallbackInfo0)

    NBioAPI_RETURN NBioAPI_ClearIndexSearchDB(NBioAPI_HANDLE hHandle)

    NBioAPI_RETURN NBioAPI_SaveIndexSearchDBToFile(NBioAPI_HANDLE hHandle, const NBioAPI_CHAR *szFilepath)

    NBioAPI_RETURN NBioAPI_LoadIndexSearchDBFromFile(NBioAPI_HANDLE hHandle, const NBioAPI_CHAR *szFilepath)

    NBioAPI_RETURN NBioAPI_GetDataCountFromIndexSearchDB(NBioAPI_HANDLE hHandle, NBioAPI_UINT32 *pDataCount)

    NBioAPI_RETURN NBioAPI_CheckDataExistFromIndexSearchDB(NBioAPI_HANDLE hHandle, NBioAPI_INDEXSEARCH_FP_INFO_PTR pFpInfo, NBioAPI_BOOL *pExist)

    ctypedef unsigned int (*FP_NBioAPI_InitIndexSearchEngine)(unsigned long)

    ctypedef unsigned int (*FP_NBioAPI_TerminateIndexSearchEngine)(unsigned long)

    ctypedef unsigned int (*FP_NBioAPI_SetIndexSearchInitInfo)(unsigned long, unsigned char, void *)

    ctypedef unsigned int (*FP_NBioAPI_GetIndexSearchInitInfo)(unsigned long, unsigned char, void *)

    ctypedef unsigned int (*FP_NBioAPI_AddFIRToIndexSearchDB)(unsigned long, nbioapi_input_fir *, unsigned int, nbioapi_indexsearch_sample_info *)

    ctypedef unsigned int (*FP_NBioAPI_RemoveDataFromIndexSearchDB)(unsigned long, nbioapi_indexsearch_fp_info *)

    ctypedef unsigned int (*FP_NBioAPI_RemoveUserFromIndexSearchDB)(unsigned long, unsigned int)

    ctypedef unsigned int (*FP_NBioAPI_IdentifyDataFromIndexSearchDB)(unsigned long, nbioapi_input_fir *, unsigned int, nbioapi_indexsearch_fp_info *, nbioapi_indexsearch_callback_info_0 *)

    ctypedef unsigned int (*FP_NBioAPI_ClearIndexSearchDB)(unsigned long)

    ctypedef unsigned int (*FP_NBioAPI_SaveIndexSearchDBToFile)(unsigned long, const char *)

    ctypedef unsigned int (*FP_NBioAPI_LoadIndexSearchDBFromFile)(unsigned long, const char *)

    ctypedef unsigned int (*FP_NBioAPI_GetDataCountFromIndexSearchDB)(unsigned long, unsigned int *)

    ctypedef unsigned int (*FP_NBioAPI_CheckDataExistFromIndexSearchDB)(unsigned long, nbioapi_indexsearch_fp_info *, int *)




class Nitgen(object):
    def __init__(self):
        super(Nitgen, self).__init__()

    def __cinit__(self):
        cdef NBioAPI_HANDLE              g_hBSP;
        cdef NBioAPI_HANDLE              m_hNBioBSP;
        cdef NBioAPI_UINT32              m_nUserID;
        cdef bool                        m_bStopFlag;

    def NBSPSDKInit(self):

        # Get Initial return values.
        cdef NBioAPI_RETURN nRet = NBioAPI_Init(self.m_hNBioBSP);

        if (NBioAPIERROR_NONE == nRet):
            #InitIndex Search Engine.
            nRet = NBioAPI_InitIndexSearchEngine(self.m_hNBioBSP)

            if (NBioAPIERROR_NONE != nRet):
                print("NBioAPI_InitIndexSearchEngine error: %s", nRet)

            else:
                ver = NBioAPI_VERSION

                # Get NBioAPI Version.
                nRet = NBioAPI_GetVersion(self.m_hNBioBSP, &ver)

                if (NBioAPIERROR_NONE == nRet):
                    print("NBioBSP_IndexSearch eNBSP SDK Version : v%d.%04d", ver.Major, ver.Minor)



                print("eNBSP SDK Initialize Success")
        else:
            print("NBioAPI_Init error: %04X", nRet)

        return nRet


    # void NBioBSP_IndexSearch::NBSPDSKTerminate()
    # {
    #     #NBSPDSK Terminate.
    #     if (m_hNBioBSP)  {
    #         NBioAPI_ClearIndexSearchDB(m_hNBioBSP);
    #         NBioAPI_TerminateIndexSearchEngine(m_hNBioBSP);
    #         NBioAPI_Terminate(m_hNBioBSP);
    #     }
    # }
